// clearfix
// source: http://cssmojo.com/latest_new_clearfix_so_far/
@mixin clearfix {
  &:after {
    clear: both;
    content: '';
    display: table;
  }
}

// visuallyhidden
// source: http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
//
// Content isn't visible, but still readable by screen readers.
@mixin visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

// site-logo-height
// Calcuates the height of the Tribune logo properly due to the tail
@mixin site-logo-height($height) {
  height: $height + px;
  margin-bottom: -$height * .12 + px;
  vertical-align: bottom;
}

// font-size
// An easy way to set both an IE `rem` fallback and think in pixels at the
// same time.
@mixin font-size($size: $font-size-base) {
  font-size: $size + px;
  font-size: $size / $font-size-base + rem;
}

// create-container
// Generate container using variables
@mixin create-container($max-width: 75rem) {
  @include clearfix();
  margin-left: auto;
  margin-right: auto;
  max-width: $max-width; // 1200px
  padding-left: $gutter;
  padding-right: $gutter;
}

// create-row
// Generate a row that clears everything below it
@mixin create-row() {
  @include clearfix();
  margin-left: -$gutter-half;
  margin-right: -$gutter-half;
}

// create-column
// Creates a column
@mixin create-column($size, $columns: $grid-columns) {
  float: left;
  min-height: 1px;
  padding-left: $gutter-half;
  padding-right: $gutter-half;
  position: relative;
  width: percentage($size / $columns);
}

@mixin create-column-offset($size, $columns: $grid-columns) {
  margin-left: percentage($size / $columns);
}

// create-grid-columns
// Creates the fleet of responsive columns based on $grid-columns
@mixin create-grid-columns($columns: $grid-columns, $gutter: $grid-gutter) {
  %grid-column {
    float: left;
    min-height: 1px;
    position: relative;
    padding-left: $gutter / 2;
    padding-right: $gutter / 2;
  }

  @for $i from 1 through $columns {
    .col-#{$i} {
      @extend %grid-column;
      width: percentage($i / $columns);
    }

    .col-offset-#{$i} {
      @include create-column-offset($i, $columns);
    }
  }
}
